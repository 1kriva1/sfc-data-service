// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SFC.Data.Infrastructure.Persistence;

#nullable disable

namespace SFC.Data.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(DataDbContext))]
    partial class DataDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("Data")
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SFC.Data.Domain.Entities.FootballPosition", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(1);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("FootballPositions", "Data");

                    b.HasData(
                        new
                        {
                            Id = 0,
                            CreatedDate = new DateTime(2023, 10, 27, 10, 7, 35, 876, DateTimeKind.Utc).AddTicks(1470),
                            Title = "Goalkeeper"
                        },
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 10, 27, 10, 7, 35, 876, DateTimeKind.Utc).AddTicks(1472),
                            Title = "Defender"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 10, 27, 10, 7, 35, 876, DateTimeKind.Utc).AddTicks(1472),
                            Title = "Midfielder"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2023, 10, 27, 10, 7, 35, 876, DateTimeKind.Utc).AddTicks(1473),
                            Title = "Forward"
                        });
                });

            modelBuilder.Entity("SFC.Data.Domain.Entities.GameStyle", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(1);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("GameStyles", "Data");

                    b.HasData(
                        new
                        {
                            Id = 0,
                            CreatedDate = new DateTime(2023, 10, 27, 10, 7, 35, 876, DateTimeKind.Utc).AddTicks(1584),
                            Title = "Defend"
                        },
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 10, 27, 10, 7, 35, 876, DateTimeKind.Utc).AddTicks(1585),
                            Title = "Attacking"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 10, 27, 10, 7, 35, 876, DateTimeKind.Utc).AddTicks(1585),
                            Title = "Aggressive"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2023, 10, 27, 10, 7, 35, 876, DateTimeKind.Utc).AddTicks(1586),
                            Title = "Control"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2023, 10, 27, 10, 7, 35, 876, DateTimeKind.Utc).AddTicks(1586),
                            Title = "CounterAttacks"
                        });
                });

            modelBuilder.Entity("SFC.Data.Domain.Entities.StatCategory", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(1);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("StatCategories", "Data");

                    b.HasData(
                        new
                        {
                            Id = 0,
                            CreatedDate = new DateTime(2023, 10, 27, 10, 7, 35, 876, DateTimeKind.Utc).AddTicks(1635),
                            Title = "Pace"
                        },
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 10, 27, 10, 7, 35, 876, DateTimeKind.Utc).AddTicks(1636),
                            Title = "Shooting"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 10, 27, 10, 7, 35, 876, DateTimeKind.Utc).AddTicks(1636),
                            Title = "Passing"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2023, 10, 27, 10, 7, 35, 876, DateTimeKind.Utc).AddTicks(1637),
                            Title = "Dribbling"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2023, 10, 27, 10, 7, 35, 876, DateTimeKind.Utc).AddTicks(1637),
                            Title = "Defending"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2023, 10, 27, 10, 7, 35, 876, DateTimeKind.Utc).AddTicks(1637),
                            Title = "Physicality"
                        });
                });

            modelBuilder.Entity("SFC.Data.Domain.Entities.StatSkill", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(1);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("StatSkills", "Data");

                    b.HasData(
                        new
                        {
                            Id = 0,
                            CreatedDate = new DateTime(2023, 10, 27, 10, 7, 35, 876, DateTimeKind.Utc).AddTicks(1659),
                            Title = "Physical"
                        },
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 10, 27, 10, 7, 35, 876, DateTimeKind.Utc).AddTicks(1660),
                            Title = "Mental"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 10, 27, 10, 7, 35, 876, DateTimeKind.Utc).AddTicks(1660),
                            Title = "Skill"
                        });
                });

            modelBuilder.Entity("SFC.Data.Domain.Entities.StatType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(1);

                    b.Property<int>("SkillId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("SkillId");

                    b.ToTable("StatTypes", "Data");

                    b.HasData(
                        new
                        {
                            Id = 0,
                            CategoryId = 0,
                            CreatedDate = new DateTime(2023, 10, 27, 10, 7, 35, 876, DateTimeKind.Utc).AddTicks(1704),
                            SkillId = 0,
                            Title = "Acceleration"
                        },
                        new
                        {
                            Id = 1,
                            CategoryId = 0,
                            CreatedDate = new DateTime(2023, 10, 27, 10, 7, 35, 876, DateTimeKind.Utc).AddTicks(1705),
                            SkillId = 0,
                            Title = "SprintSpeed"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            CreatedDate = new DateTime(2023, 10, 27, 10, 7, 35, 876, DateTimeKind.Utc).AddTicks(1705),
                            SkillId = 2,
                            Title = "Positioning"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            CreatedDate = new DateTime(2023, 10, 27, 10, 7, 35, 876, DateTimeKind.Utc).AddTicks(1705),
                            SkillId = 2,
                            Title = "Finishing"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 1,
                            CreatedDate = new DateTime(2023, 10, 27, 10, 7, 35, 876, DateTimeKind.Utc).AddTicks(1706),
                            SkillId = 2,
                            Title = "ShotPower"
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 1,
                            CreatedDate = new DateTime(2023, 10, 27, 10, 7, 35, 876, DateTimeKind.Utc).AddTicks(1706),
                            SkillId = 2,
                            Title = "LongShots"
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 1,
                            CreatedDate = new DateTime(2023, 10, 27, 10, 7, 35, 876, DateTimeKind.Utc).AddTicks(1706),
                            SkillId = 2,
                            Title = "Volleys"
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 1,
                            CreatedDate = new DateTime(2023, 10, 27, 10, 7, 35, 876, DateTimeKind.Utc).AddTicks(1707),
                            SkillId = 2,
                            Title = "Penalties"
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 2,
                            CreatedDate = new DateTime(2023, 10, 27, 10, 7, 35, 876, DateTimeKind.Utc).AddTicks(1707),
                            SkillId = 2,
                            Title = "Vision"
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 2,
                            CreatedDate = new DateTime(2023, 10, 27, 10, 7, 35, 876, DateTimeKind.Utc).AddTicks(1707),
                            SkillId = 2,
                            Title = "Crossing"
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 2,
                            CreatedDate = new DateTime(2023, 10, 27, 10, 7, 35, 876, DateTimeKind.Utc).AddTicks(1707),
                            SkillId = 2,
                            Title = "FkAccuracy"
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 2,
                            CreatedDate = new DateTime(2023, 10, 27, 10, 7, 35, 876, DateTimeKind.Utc).AddTicks(1708),
                            SkillId = 2,
                            Title = "ShortPassing"
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = 2,
                            CreatedDate = new DateTime(2023, 10, 27, 10, 7, 35, 876, DateTimeKind.Utc).AddTicks(1708),
                            SkillId = 2,
                            Title = "LongPassing"
                        },
                        new
                        {
                            Id = 13,
                            CategoryId = 2,
                            CreatedDate = new DateTime(2023, 10, 27, 10, 7, 35, 876, DateTimeKind.Utc).AddTicks(1709),
                            SkillId = 2,
                            Title = "Curve"
                        },
                        new
                        {
                            Id = 14,
                            CategoryId = 3,
                            CreatedDate = new DateTime(2023, 10, 27, 10, 7, 35, 876, DateTimeKind.Utc).AddTicks(1709),
                            SkillId = 0,
                            Title = "Agility"
                        },
                        new
                        {
                            Id = 15,
                            CategoryId = 3,
                            CreatedDate = new DateTime(2023, 10, 27, 10, 7, 35, 876, DateTimeKind.Utc).AddTicks(1709),
                            SkillId = 0,
                            Title = "Balance"
                        },
                        new
                        {
                            Id = 16,
                            CategoryId = 3,
                            CreatedDate = new DateTime(2023, 10, 27, 10, 7, 35, 876, DateTimeKind.Utc).AddTicks(1709),
                            SkillId = 0,
                            Title = "Reactions"
                        },
                        new
                        {
                            Id = 17,
                            CategoryId = 3,
                            CreatedDate = new DateTime(2023, 10, 27, 10, 7, 35, 876, DateTimeKind.Utc).AddTicks(1710),
                            SkillId = 2,
                            Title = "BallControl"
                        },
                        new
                        {
                            Id = 18,
                            CategoryId = 3,
                            CreatedDate = new DateTime(2023, 10, 27, 10, 7, 35, 876, DateTimeKind.Utc).AddTicks(1710),
                            SkillId = 2,
                            Title = "Dribbling"
                        },
                        new
                        {
                            Id = 19,
                            CategoryId = 3,
                            CreatedDate = new DateTime(2023, 10, 27, 10, 7, 35, 876, DateTimeKind.Utc).AddTicks(1710),
                            SkillId = 1,
                            Title = "Composure"
                        },
                        new
                        {
                            Id = 20,
                            CategoryId = 4,
                            CreatedDate = new DateTime(2023, 10, 27, 10, 7, 35, 876, DateTimeKind.Utc).AddTicks(1711),
                            SkillId = 2,
                            Title = "Interceptions"
                        },
                        new
                        {
                            Id = 21,
                            CategoryId = 4,
                            CreatedDate = new DateTime(2023, 10, 27, 10, 7, 35, 876, DateTimeKind.Utc).AddTicks(1711),
                            SkillId = 2,
                            Title = "HeadingAccuracy"
                        },
                        new
                        {
                            Id = 22,
                            CategoryId = 4,
                            CreatedDate = new DateTime(2023, 10, 27, 10, 7, 35, 876, DateTimeKind.Utc).AddTicks(1711),
                            SkillId = 2,
                            Title = "DefAwarenence"
                        },
                        new
                        {
                            Id = 23,
                            CategoryId = 4,
                            CreatedDate = new DateTime(2023, 10, 27, 10, 7, 35, 876, DateTimeKind.Utc).AddTicks(1712),
                            SkillId = 2,
                            Title = "StandingTackle"
                        },
                        new
                        {
                            Id = 24,
                            CategoryId = 4,
                            CreatedDate = new DateTime(2023, 10, 27, 10, 7, 35, 876, DateTimeKind.Utc).AddTicks(1712),
                            SkillId = 2,
                            Title = "SlidingTackle"
                        },
                        new
                        {
                            Id = 25,
                            CategoryId = 5,
                            CreatedDate = new DateTime(2023, 10, 27, 10, 7, 35, 876, DateTimeKind.Utc).AddTicks(1712),
                            SkillId = 0,
                            Title = "Jumping"
                        },
                        new
                        {
                            Id = 26,
                            CategoryId = 5,
                            CreatedDate = new DateTime(2023, 10, 27, 10, 7, 35, 876, DateTimeKind.Utc).AddTicks(1713),
                            SkillId = 0,
                            Title = "Stamina"
                        },
                        new
                        {
                            Id = 27,
                            CategoryId = 5,
                            CreatedDate = new DateTime(2023, 10, 27, 10, 7, 35, 876, DateTimeKind.Utc).AddTicks(1713),
                            SkillId = 0,
                            Title = "Strength"
                        },
                        new
                        {
                            Id = 28,
                            CategoryId = 5,
                            CreatedDate = new DateTime(2023, 10, 27, 10, 7, 35, 876, DateTimeKind.Utc).AddTicks(1713),
                            SkillId = 1,
                            Title = "Aggression"
                        });
                });

            modelBuilder.Entity("SFC.Data.Domain.Entities.WorkingFoot", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(1);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("WorkingFoots", "Data");

                    b.HasData(
                        new
                        {
                            Id = 0,
                            CreatedDate = new DateTime(2023, 10, 27, 10, 7, 35, 876, DateTimeKind.Utc).AddTicks(1610),
                            Title = "Right"
                        },
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 10, 27, 10, 7, 35, 876, DateTimeKind.Utc).AddTicks(1611),
                            Title = "Left"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 10, 27, 10, 7, 35, 876, DateTimeKind.Utc).AddTicks(1611),
                            Title = "Both"
                        });
                });

            modelBuilder.Entity("SFC.Data.Domain.Entities.StatType", b =>
                {
                    b.HasOne("SFC.Data.Domain.Entities.StatCategory", null)
                        .WithMany("Types")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SFC.Data.Domain.Entities.StatSkill", null)
                        .WithMany("Types")
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SFC.Data.Domain.Entities.StatCategory", b =>
                {
                    b.Navigation("Types");
                });

            modelBuilder.Entity("SFC.Data.Domain.Entities.StatSkill", b =>
                {
                    b.Navigation("Types");
                });
#pragma warning restore 612, 618
        }
    }
}
