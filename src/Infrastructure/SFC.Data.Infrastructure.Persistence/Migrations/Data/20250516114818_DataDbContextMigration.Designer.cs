// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SFC.Data.Infrastructure.Persistence.Contexts;

#nullable disable

namespace SFC.Data.Infrastructure.Persistence.Migrations.Data
{
    [DbContext(typeof(DataDbContext))]
    [Migration("20250516114818_DataDbContextMigration")]
    partial class DataDbContextMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("Data")
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SFC.Data.Domain.Entities.Data.FootballPosition", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(1);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("FootballPosition", "Data");

                    b.HasData(
                        new
                        {
                            Id = 0,
                            CreatedDate = new DateTime(2025, 5, 16, 11, 48, 18, 476, DateTimeKind.Utc).AddTicks(4786),
                            Title = "Goalkeeper"
                        },
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2025, 5, 16, 11, 48, 18, 476, DateTimeKind.Utc).AddTicks(4797),
                            Title = "Defender"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2025, 5, 16, 11, 48, 18, 476, DateTimeKind.Utc).AddTicks(4807),
                            Title = "Midfielder"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2025, 5, 16, 11, 48, 18, 476, DateTimeKind.Utc).AddTicks(4813),
                            Title = "Forward"
                        });
                });

            modelBuilder.Entity("SFC.Data.Domain.Entities.Data.GameStyle", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(1);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("GameStyle", "Data");

                    b.HasData(
                        new
                        {
                            Id = 0,
                            CreatedDate = new DateTime(2025, 5, 16, 11, 48, 18, 476, DateTimeKind.Utc).AddTicks(4891),
                            Title = "Defend"
                        },
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2025, 5, 16, 11, 48, 18, 476, DateTimeKind.Utc).AddTicks(4903),
                            Title = "Attacking"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2025, 5, 16, 11, 48, 18, 476, DateTimeKind.Utc).AddTicks(4912),
                            Title = "Aggressive"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2025, 5, 16, 11, 48, 18, 476, DateTimeKind.Utc).AddTicks(4963),
                            Title = "Counter Attacks"
                        });
                });

            modelBuilder.Entity("SFC.Data.Domain.Entities.Data.Shirt", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(1);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Shirt", "Data");

                    b.HasData(
                        new
                        {
                            Id = 0,
                            CreatedDate = new DateTime(2025, 5, 16, 11, 48, 18, 476, DateTimeKind.Utc).AddTicks(6040),
                            Title = "Blue"
                        },
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2025, 5, 16, 11, 48, 18, 476, DateTimeKind.Utc).AddTicks(6050),
                            Title = "Pink"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2025, 5, 16, 11, 48, 18, 476, DateTimeKind.Utc).AddTicks(6085),
                            Title = "Black"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2025, 5, 16, 11, 48, 18, 476, DateTimeKind.Utc).AddTicks(6092),
                            Title = "Red"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2025, 5, 16, 11, 48, 18, 476, DateTimeKind.Utc).AddTicks(6098),
                            Title = "Yellow"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2025, 5, 16, 11, 48, 18, 476, DateTimeKind.Utc).AddTicks(6106),
                            Title = "Purple"
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2025, 5, 16, 11, 48, 18, 476, DateTimeKind.Utc).AddTicks(6113),
                            Title = "Orange"
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2025, 5, 16, 11, 48, 18, 476, DateTimeKind.Utc).AddTicks(6119),
                            Title = "Brown"
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2025, 5, 16, 11, 48, 18, 476, DateTimeKind.Utc).AddTicks(6124),
                            Title = "Green"
                        });
                });

            modelBuilder.Entity("SFC.Data.Domain.Entities.Data.StatCategory", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(1);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("StatCategory", "Data");

                    b.HasData(
                        new
                        {
                            Id = 0,
                            CreatedDate = new DateTime(2025, 5, 16, 11, 48, 18, 476, DateTimeKind.Utc).AddTicks(5147),
                            Title = "Pace"
                        },
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2025, 5, 16, 11, 48, 18, 476, DateTimeKind.Utc).AddTicks(5157),
                            Title = "Shooting"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2025, 5, 16, 11, 48, 18, 476, DateTimeKind.Utc).AddTicks(5165),
                            Title = "Passing"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2025, 5, 16, 11, 48, 18, 476, DateTimeKind.Utc).AddTicks(5172),
                            Title = "Dribbling"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2025, 5, 16, 11, 48, 18, 476, DateTimeKind.Utc).AddTicks(5178),
                            Title = "Defending"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2025, 5, 16, 11, 48, 18, 476, DateTimeKind.Utc).AddTicks(5186),
                            Title = "Physicality"
                        });
                });

            modelBuilder.Entity("SFC.Data.Domain.Entities.Data.StatSkill", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(1);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("StatSkill", "Data");

                    b.HasData(
                        new
                        {
                            Id = 0,
                            CreatedDate = new DateTime(2025, 5, 16, 11, 48, 18, 476, DateTimeKind.Utc).AddTicks(5263),
                            Title = "Physical"
                        },
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2025, 5, 16, 11, 48, 18, 476, DateTimeKind.Utc).AddTicks(5273),
                            Title = "Mental"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2025, 5, 16, 11, 48, 18, 476, DateTimeKind.Utc).AddTicks(5280),
                            Title = "Skill"
                        });
                });

            modelBuilder.Entity("SFC.Data.Domain.Entities.Data.StatType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(1);

                    b.Property<int>("SkillId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("SkillId");

                    b.ToTable("StatType", "Data");

                    b.HasData(
                        new
                        {
                            Id = 0,
                            CategoryId = 0,
                            CreatedDate = new DateTime(2025, 5, 16, 11, 48, 18, 476, DateTimeKind.Utc).AddTicks(5427),
                            SkillId = 0,
                            Title = "Acceleration"
                        },
                        new
                        {
                            Id = 1,
                            CategoryId = 0,
                            CreatedDate = new DateTime(2025, 5, 16, 11, 48, 18, 476, DateTimeKind.Utc).AddTicks(5575),
                            SkillId = 0,
                            Title = "Sprint Speed"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            CreatedDate = new DateTime(2025, 5, 16, 11, 48, 18, 476, DateTimeKind.Utc).AddTicks(5587),
                            SkillId = 2,
                            Title = "Positioning"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            CreatedDate = new DateTime(2025, 5, 16, 11, 48, 18, 476, DateTimeKind.Utc).AddTicks(5594),
                            SkillId = 2,
                            Title = "Finishing"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 1,
                            CreatedDate = new DateTime(2025, 5, 16, 11, 48, 18, 476, DateTimeKind.Utc).AddTicks(5614),
                            SkillId = 2,
                            Title = "Shot Power"
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 1,
                            CreatedDate = new DateTime(2025, 5, 16, 11, 48, 18, 476, DateTimeKind.Utc).AddTicks(5631),
                            SkillId = 2,
                            Title = "Long Shots"
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 1,
                            CreatedDate = new DateTime(2025, 5, 16, 11, 48, 18, 476, DateTimeKind.Utc).AddTicks(5642),
                            SkillId = 2,
                            Title = "Volleys"
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 1,
                            CreatedDate = new DateTime(2025, 5, 16, 11, 48, 18, 476, DateTimeKind.Utc).AddTicks(5648),
                            SkillId = 2,
                            Title = "Penalties"
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 2,
                            CreatedDate = new DateTime(2025, 5, 16, 11, 48, 18, 476, DateTimeKind.Utc).AddTicks(5656),
                            SkillId = 2,
                            Title = "Vision"
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 2,
                            CreatedDate = new DateTime(2025, 5, 16, 11, 48, 18, 476, DateTimeKind.Utc).AddTicks(5665),
                            SkillId = 2,
                            Title = "Crossing"
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 2,
                            CreatedDate = new DateTime(2025, 5, 16, 11, 48, 18, 476, DateTimeKind.Utc).AddTicks(5682),
                            SkillId = 2,
                            Title = "Fk Accuracy"
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 2,
                            CreatedDate = new DateTime(2025, 5, 16, 11, 48, 18, 476, DateTimeKind.Utc).AddTicks(5698),
                            SkillId = 2,
                            Title = "Short Passing"
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = 2,
                            CreatedDate = new DateTime(2025, 5, 16, 11, 48, 18, 476, DateTimeKind.Utc).AddTicks(5740),
                            SkillId = 2,
                            Title = "Long Passing"
                        },
                        new
                        {
                            Id = 13,
                            CategoryId = 2,
                            CreatedDate = new DateTime(2025, 5, 16, 11, 48, 18, 476, DateTimeKind.Utc).AddTicks(5751),
                            SkillId = 2,
                            Title = "Curve"
                        },
                        new
                        {
                            Id = 14,
                            CategoryId = 3,
                            CreatedDate = new DateTime(2025, 5, 16, 11, 48, 18, 476, DateTimeKind.Utc).AddTicks(5760),
                            SkillId = 0,
                            Title = "Agility"
                        },
                        new
                        {
                            Id = 15,
                            CategoryId = 3,
                            CreatedDate = new DateTime(2025, 5, 16, 11, 48, 18, 476, DateTimeKind.Utc).AddTicks(5767),
                            SkillId = 0,
                            Title = "Balance"
                        },
                        new
                        {
                            Id = 16,
                            CategoryId = 3,
                            CreatedDate = new DateTime(2025, 5, 16, 11, 48, 18, 476, DateTimeKind.Utc).AddTicks(5775),
                            SkillId = 0,
                            Title = "Reactions"
                        },
                        new
                        {
                            Id = 17,
                            CategoryId = 3,
                            CreatedDate = new DateTime(2025, 5, 16, 11, 48, 18, 476, DateTimeKind.Utc).AddTicks(5791),
                            SkillId = 2,
                            Title = "Ball Control"
                        },
                        new
                        {
                            Id = 18,
                            CategoryId = 3,
                            CreatedDate = new DateTime(2025, 5, 16, 11, 48, 18, 476, DateTimeKind.Utc).AddTicks(5799),
                            SkillId = 2,
                            Title = "Dribbling"
                        },
                        new
                        {
                            Id = 19,
                            CategoryId = 3,
                            CreatedDate = new DateTime(2025, 5, 16, 11, 48, 18, 476, DateTimeKind.Utc).AddTicks(5806),
                            SkillId = 1,
                            Title = "Composure"
                        },
                        new
                        {
                            Id = 20,
                            CategoryId = 4,
                            CreatedDate = new DateTime(2025, 5, 16, 11, 48, 18, 476, DateTimeKind.Utc).AddTicks(5812),
                            SkillId = 2,
                            Title = "Interceptions"
                        },
                        new
                        {
                            Id = 21,
                            CategoryId = 4,
                            CreatedDate = new DateTime(2025, 5, 16, 11, 48, 18, 476, DateTimeKind.Utc).AddTicks(5828),
                            SkillId = 2,
                            Title = "Heading Accuracy"
                        },
                        new
                        {
                            Id = 22,
                            CategoryId = 4,
                            CreatedDate = new DateTime(2025, 5, 16, 11, 48, 18, 476, DateTimeKind.Utc).AddTicks(5844),
                            SkillId = 2,
                            Title = "Def Awarenence"
                        },
                        new
                        {
                            Id = 23,
                            CategoryId = 4,
                            CreatedDate = new DateTime(2025, 5, 16, 11, 48, 18, 476, DateTimeKind.Utc).AddTicks(5860),
                            SkillId = 2,
                            Title = "Standing Tackle"
                        },
                        new
                        {
                            Id = 24,
                            CategoryId = 4,
                            CreatedDate = new DateTime(2025, 5, 16, 11, 48, 18, 476, DateTimeKind.Utc).AddTicks(5875),
                            SkillId = 2,
                            Title = "Sliding Tackle"
                        },
                        new
                        {
                            Id = 25,
                            CategoryId = 5,
                            CreatedDate = new DateTime(2025, 5, 16, 11, 48, 18, 476, DateTimeKind.Utc).AddTicks(5883),
                            SkillId = 0,
                            Title = "Jumping"
                        },
                        new
                        {
                            Id = 26,
                            CategoryId = 5,
                            CreatedDate = new DateTime(2025, 5, 16, 11, 48, 18, 476, DateTimeKind.Utc).AddTicks(5890),
                            SkillId = 0,
                            Title = "Stamina"
                        },
                        new
                        {
                            Id = 27,
                            CategoryId = 5,
                            CreatedDate = new DateTime(2025, 5, 16, 11, 48, 18, 476, DateTimeKind.Utc).AddTicks(5896),
                            SkillId = 0,
                            Title = "Strength"
                        },
                        new
                        {
                            Id = 28,
                            CategoryId = 5,
                            CreatedDate = new DateTime(2025, 5, 16, 11, 48, 18, 476, DateTimeKind.Utc).AddTicks(5902),
                            SkillId = 1,
                            Title = "Aggression"
                        });
                });

            modelBuilder.Entity("SFC.Data.Domain.Entities.Data.WorkingFoot", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(1);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("WorkingFoot", "Data");

                    b.HasData(
                        new
                        {
                            Id = 0,
                            CreatedDate = new DateTime(2025, 5, 16, 11, 48, 18, 476, DateTimeKind.Utc).AddTicks(5049),
                            Title = "Right"
                        },
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2025, 5, 16, 11, 48, 18, 476, DateTimeKind.Utc).AddTicks(5057),
                            Title = "Left"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2025, 5, 16, 11, 48, 18, 476, DateTimeKind.Utc).AddTicks(5063),
                            Title = "Both"
                        });
                });

            modelBuilder.Entity("SFC.Data.Domain.Entities.Metadata.Metadata", b =>
                {
                    b.Property<int>("Service")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<int>("Domain")
                        .HasColumnType("int");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.HasKey("Service", "Type");

                    b.HasIndex("State");

                    b.HasIndex("Type");

                    b.ToTable("Metadata", "Metadata");

                    b.HasData(
                        new
                        {
                            Service = 0,
                            Type = 0,
                            Domain = 0,
                            State = 1
                        });
                });

            modelBuilder.Entity("SFC.Data.Domain.Entities.Metadata.MetadataDomain", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Domains", "Metadata");

                    b.HasData(
                        new
                        {
                            Id = 0,
                            Title = "Data"
                        });
                });

            modelBuilder.Entity("SFC.Data.Domain.Entities.Metadata.MetadataService", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Services", "Metadata");

                    b.HasData(
                        new
                        {
                            Id = 0,
                            Title = "Data"
                        });
                });

            modelBuilder.Entity("SFC.Data.Domain.Entities.Metadata.MetadataState", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("States", "Metadata");

                    b.HasData(
                        new
                        {
                            Id = 0,
                            Title = "Not Required"
                        },
                        new
                        {
                            Id = 1,
                            Title = "Required"
                        },
                        new
                        {
                            Id = 2,
                            Title = "Done"
                        });
                });

            modelBuilder.Entity("SFC.Data.Domain.Entities.Metadata.MetadataType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Types", "Metadata");

                    b.HasData(
                        new
                        {
                            Id = 0,
                            Title = "Initialization"
                        });
                });

            modelBuilder.Entity("SFC.Data.Domain.Entities.Data.StatType", b =>
                {
                    b.HasOne("SFC.Data.Domain.Entities.Data.StatCategory", null)
                        .WithMany("Types")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SFC.Data.Domain.Entities.Data.StatSkill", null)
                        .WithMany("Types")
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SFC.Data.Domain.Entities.Metadata.Metadata", b =>
                {
                    b.HasOne("SFC.Data.Domain.Entities.Metadata.MetadataService", null)
                        .WithMany()
                        .HasForeignKey("Service")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SFC.Data.Domain.Entities.Metadata.MetadataState", null)
                        .WithMany()
                        .HasForeignKey("State")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SFC.Data.Domain.Entities.Metadata.MetadataType", null)
                        .WithMany()
                        .HasForeignKey("Type")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SFC.Data.Domain.Entities.Data.StatCategory", b =>
                {
                    b.Navigation("Types");
                });

            modelBuilder.Entity("SFC.Data.Domain.Entities.Data.StatSkill", b =>
                {
                    b.Navigation("Types");
                });
#pragma warning restore 612, 618
        }
    }
}
